*.suo
*.suo
*.user
*.userosscache
*.sln.docstates


# OS generated files 
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
*.userprefs

# Visual Studio cache/options directory and files
.vs/
.vscode/*
*.code-workspace

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.opencover.xml
dotnet_coverage/

# TeamCity is a build add-in
_TeamCity*

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets


# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.publishsettings
node_modules/
orleans.codegen.cs


# Node.js Tools for Visual Studio
.ntvs_analysis.dat

/packages
obj
*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
.idea/

# IdentitySerer
**/identityserver4_log.txt

# Karma/junit
**/angular/**/junit

#sonar-scanner
.scannerwork
.sonarqube

# appsettings
**/appsettings.Local.json

venv
.coverage
.idea
.pytest_cache
coverage.xml
__pycache__

# Image Service
**\src\Services\Imaging\test
src/Services/Imaging/test/

# Add support for direnv
.envrc

# Ignore remote helm charts
**/charts/*.tgz

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*
.terraform.lock.hcl

# Crash log files
crash.log

# Exclude all .tfvars files, which are likely to contain sentitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
#
*.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore telepresence template
environment.telepresence.ts

# Ignore monocrash files
mono_crash*

**/pacts
